ion-app.app-root.md {
  .button-md {
    min-height: $button-md-height;
  }

  // Light buttons color.
  .button-md-light {
    color: color($colors, primary, base);
  }

  .col[align-self-stretch] .card-md {
    height: calc(100% - #{($card-md-margin-end + $card-md-margin-start)});
  }

  .bar-buttons core-context-menu .button-clear-md {
    color: $toolbar-md-button-color;
  }

  .item-md ion-spinner[item-start] + .item-inner,
  .item-md ion-spinner[item-start] + .item-input {
    @include margin-horizontal($item-md-padding-start + ($item-md-padding-start / 2) - 1, null);
  }

  @each $color-name, $color-base, $color-contrast in get-colors($colors-md) {
    .core-#{$color-name}-card {
      @extend .card-md;
      @extend .card-content-md;

      &[icon-start] {
        @include padding(null, null, null, $card-md-padding-left * 2 + 20);

        ion-icon {
          @include position(null, null, null, $card-md-padding-left);
        }
      }
    }
  }

  .core-avoid-header ion-content {
      top: $navbar-md-height;
      height: calc(100% - #{($navbar-md-height)});
  }

  // Different levels of padding.
  @for $i from 0 through 15 {
    .core-padding-#{$i} {
      @include padding(null, null, null, 15px * $i + $item-md-padding-start);
    }
  }

  // Recover borders on items inside cards.
  .card-md.with-borders .item-md.item-block .item-inner {
    border-bottom: 1px solid $list-md-border-color;
  }
  .card-md.with-borders .item-md:last-child .item-inner {
    border-bottom: 0;
  }
}